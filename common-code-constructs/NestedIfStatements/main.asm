.386
.model flat, stdcall
.stack 4096

ExitProcess PROTO, dwExitCode: DWORD

.data
	; define your variable here

.code

main PROC
	; write your assembly code here
		mov dword ptr [ebp - 4], 2
		mov dword ptr [ebp - 8], 2
		mov dword ptr [ebp - 12], 1

		mov eax, [ebp - 4]
		cmp eax, [ebp - 8]

		jnz l1
		; below is the if block
		mov eax, [ebp - 12]
		mov ebx, 0
		cmp eax, ebx
		jnz l3

		mov eax, [ebp - 12]
		add eax, [ebp - 8]
		mov [ebp - 12], eax

		jmp l4 
		; below is an inner else block
	l3: 
		mov eax, [ebp - 12]
		sub eax, [ebp - 8] ; this is performing z=z-y not z=y-z
		mov [ebp - 12], eax

	l4:	jmp l2 ; jumps over the else block

		; below is the else block
	l1: mov eax, [ebp - 12]
		mov ebx, 0
		cmp eax, ebx
		jnz l5

		mov eax, [ebp - 12]
		add eax, [ebp - 4]
		mov [ebp - 12], eax

		jmp l6
		; below is inner else block
	l5: mov eax, [ebp - 12]
		sub eax, [ebp - 4] ; this is performing z=z-x not z=x-z
		mov [ebp - 12], eax
	
	l6: jmp l2
	l2: nop

	INVOKE ExitProcess, 0
main ENDP
END main