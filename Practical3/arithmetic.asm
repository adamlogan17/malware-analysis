.386
.model flat, stdcall
.stack 4096

ExitProcess PROTO, dwExitCode: DWORD

.data
	; define your variable here

.code

; change proc name to main if you would like to run this file
arithm PROC
	; write your assembly code here
	mov dword ptr [ebp - 4], 11
	mov dword ptr [ebp - 8], 3

	mov eax, [ebp - 4]
	add eax, [ebp - 8]
	mov [ebp - 4], eax 

	mov eax, [ebp - 4]
	sub eax, [ebp - 8]
	mov [ebp - 4], eax 

	mov eax, [ebp - 4]
	dec eax
	mov [ebp - 4], eax 

	mov eax, [ebp - 8]
	inc eax
	mov [ebp - 8], eax

	mov edx, 0;
	mov eax, [ebp - 4]
	mov ebx, 2
	mul  ebx ; the lest significant bits are stored in eax and the most significant bits are stored in eax
	mov [ebp - 4], eax

	mov edx, 0 ; clears edx before division occurs as the reminder is stored here
	mov eax, [ebp - 8]
	mov ebx, 3
	div ebx
	mov [ebp - 8], edx

	INVOKE ExitProcess, 0
arithm ENDP
END arithm